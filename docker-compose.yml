version: "3.3"
services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 30s
      timeout: 20s
      retries: 5
    ports:
     - 4369:4369
     - 5671:5671
     - 5672:5672
     - 15671:15671
     - 15672:15672
     - 25672:25672
    deploy:
      restart_policy:
        condition: on-failure

  traefik:
    image: "traefik:latest"
    container_name: "traefik"
    command: --log.level=DEBUG --api.insecure=true --providers.docker=true --providers.docker.exposedbydefault=false --entrypoints.web.address=:80
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  spa:
    build:
      context: .
      dockerfile: src/frame.demo.stack.client/Dockerfile
    container_name: spa
    ports:
      - "8081:8081"
    labels:
      traefik.http.routers.spa.entrypoints: web
      traefik.http.routers.spa.rule: Host(`localhost`)
      traefik.enable: 'true'
      traefik.http.services.spa.loadbalancer.server.port: '8081'

  api:
    build:
      context: .
      dockerfile: src/frame.demo.Stack.Server/Dockerfile
    container_name: api
    ports:
      - "8082:8082"
    environment:
      - "ASPNETCORE_HTTP_PORTS=8082"
    labels:
      traefik.enable: 'true'
      traefik.http.routers.api.entrypoints: web
      traefik.http.routers.api.rule: Host(`localhost`) && (PathPrefix(`/api`) || PathPrefix(`/swagger`))
      traefik.http.services.api.loadbalancer.server.port: '8082'
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    deploy:
      restart_policy:
        condition: on-failure
  
  postgres:
    image: postgres:latest
    container_name: postgres
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=framepassword
      - POSTGRES_USER=frameuser
      - POSTGRES_DB=framedb
    volumes:
      - local_pgdata:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    ports:
      - "8888:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: frame@frame.demo
      PGADMIN_DEFAULT_PASSWORD: FrameDemo0!
    volumes:
      - pgadmin-data:/var/lib/pgadmin

  consumer:
    build:
      context: .
      dockerfile: src/frame.demo.Stack.Consumer/Dockerfile
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    deploy:
      restart_policy:
        condition: on-failure
  
  probe:
    build:
      context: .
      dockerfile: src/frame.demo.Stack.TemperatureProbe/Dockerfile
    container_name: probe
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    deploy:
      restart_policy:
        condition: on-failure
    
  seq:
    image: datalust/seq:latest
    container_name: seq
    environment:
      ACCEPT_EULA: y
    ports:
     - 5341:80
    volumes:
    - seq-data:/data

volumes:
  local_pgdata:
  pgadmin-data:
  seq-data:  